

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Connection String:      "Server=tcp:hoangpnse62077.database.windows.net,1433;Initial Catalog=CapstoneProjectFinalDb;Persist Security Info=False;User ID=hoang;password=**zapped**;;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : SQL Azure
// Database Engine Edition: Azure

//Customized By: Hoangpn
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 2.1
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace ConsoleApp2.Entities
{
  
    using System.Linq;

    #region POCO classes
     public interface IDabaseModel 
     {
		string CreatedBy { get; set; } // CreatedBy (length: 50)
		System.DateTime? CreatedDate { get; set; } // CreatedDate
		string UpdatedBy { get; set; } // UpdatedBy (length: 50)
		System.DateTime? UpdatedDate { get; set; } // UpdatedDate
	 } 
     
    public interface ISoftDelete 
    {
        bool IsDeleted { get; set; }
    }   
	
	
    // SupplierStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplierStatus : ISoftDelete, IDabaseModel 
    {
        public int SupplierStatusId { get; set; } // SupplierStatusId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Suppliers where [Supplier].[SupplierStatusId] point to this entity (FK_Supplier_SupplierStatus)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Supplier> Suppliers { get; set; } // Supplier.FK_Supplier_SupplierStatus

        public SupplierStatus()
        {
            Suppliers = new System.Collections.Generic.List<Supplier>();
        }
    }

    // Supplier
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Supplier : ISoftDelete, IDabaseModel 
    {
        public int SupplierId { get; set; } // SupplierId (Primary key)
        public int? AccountId { get; set; } // AccountId
        public string Name { get; set; } // Name (length: 50)
        public string Avatar { get; set; } // Avatar (length: 200)
        public int? SupplierStatusId { get; set; } // SupplierStatusId
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public string Email { get; set; } // Email (length: 50)
        public int? MainBranchId { get; set; } // MainBranchId
        public string PhoneNumber { get; set; } // PhoneNumber (length: 11)
        public bool IsDeleted { get; set; } // IsDeleted
        public string Description { get; set; } // Description
        public string PaymentEmail { get; set; } // PaymentEmail (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Branches where [Branch].[SupplierId] point to this entity (FK_Branch_Supplier)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Branch> Branches { get; set; } // Branch.FK_Branch_Supplier
        /// <summary>
        /// Child Feedbacks where [Feedback].[SupplierId] point to this entity (FK_Feedback_Supplier)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK_Feedback_Supplier
        /// <summary>
        /// Child Orders where [Order].[SupplierId] point to this entity (FK_Order_Supplier)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Order.FK_Order_Supplier
        /// <summary>
        /// Child Promotions where [Promotion].[SupplierId] point to this entity (FK_Promotion_Supplier)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Promotion> Promotions { get; set; } // Promotion.FK_Promotion_Supplier
        /// <summary>
        /// Child Services where [Service].[SupplierId] point to this entity (FK_Service_Supplier)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Service> Services { get; set; } // Service.FK_Service_Supplier

        // Foreign keys

        /// <summary>
        /// Parent SupplierStatus pointed by [Supplier].([SupplierStatusId]) (FK_Supplier_SupplierStatus)
        /// </summary>
        public virtual SupplierStatus SupplierStatus { get; set; } // FK_Supplier_SupplierStatus

        public Supplier()
        {
            Services = new System.Collections.Generic.List<Service>();
            Orders = new System.Collections.Generic.List<Order>();
            Branches = new System.Collections.Generic.List<Branch>();
            Feedbacks = new System.Collections.Generic.List<Feedback>();
            Promotions = new System.Collections.Generic.List<Promotion>();
        }
    }

    // ServiceType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ServiceType : ISoftDelete, IDabaseModel 
    {
        public int ServiceTypeId { get; set; } // ServiceTypeId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public bool IsDeleted { get; set; } // IsDeleted
        public string Avatar { get; set; } // Avatar (length: 200)

        // Reverse navigation

        /// <summary>
        /// Child Services where [Service].[ServiceTypeId] point to this entity (FK_Service_ServiceType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Service> Services { get; set; } // Service.FK_Service_ServiceType

        public ServiceType()
        {
            Services = new System.Collections.Generic.List<Service>();
        }
    }

    // ServiceStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ServiceStatus : ISoftDelete, IDabaseModel 
    {
        public int ServiceStatusId { get; set; } // ServiceStatusId (Primary key)
        public string Name { get; set; } // Name (length: 20)
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate

        // Reverse navigation

        /// <summary>
        /// Child Services where [Service].[ServiceStatusId] point to this entity (FK_Service_ServiceStatus)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Service> Services { get; set; } // Service.FK_Service_ServiceStatus

        public ServiceStatus()
        {
            Services = new System.Collections.Generic.List<Service>();
        }
    }

    // Service
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Service : ISoftDelete, IDabaseModel 
    {
        public int ServiceId { get; set; } // ServiceId (Primary key)
        public int? SupplierId { get; set; } // SupplierId
        public int? ServiceTypeId { get; set; } // ServiceTypeId
        public string Name { get; set; } // Name (length: 50)
        public decimal? Price { get; set; } // Price
        public int? ServiceStatusId { get; set; } // ServiceStatusId
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child OrderDetails where [OrderDetail].[ServiceId] point to this entity (FK_OrderDetail_Service)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<OrderDetail> OrderDetails { get; set; } // OrderDetail.FK_OrderDetail_Service
        /// <summary>
        /// Child PromotionDetails where [PromotionDetail].[ServiceId] point to this entity (FK_PromotionDetail_Service)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PromotionDetail> PromotionDetails { get; set; } // PromotionDetail.FK_PromotionDetail_Service

        // Foreign keys

        /// <summary>
        /// Parent ServiceStatus pointed by [Service].([ServiceStatusId]) (FK_Service_ServiceStatus)
        /// </summary>
        public virtual ServiceStatus ServiceStatus { get; set; } // FK_Service_ServiceStatus

        /// <summary>
        /// Parent ServiceType pointed by [Service].([ServiceTypeId]) (FK_Service_ServiceType)
        /// </summary>
        public virtual ServiceType ServiceType { get; set; } // FK_Service_ServiceType

        /// <summary>
        /// Parent Supplier pointed by [Service].([SupplierId]) (FK_Service_Supplier)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_Service_Supplier

        public Service()
        {
            IsDeleted = false;
            PromotionDetails = new System.Collections.Generic.List<PromotionDetail>();
            OrderDetails = new System.Collections.Generic.List<OrderDetail>();
        }
    }

    // PromotionStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PromotionStatus : ISoftDelete, IDabaseModel 
    {
        public int PromotionStatusId { get; set; } // PromotionStatusId (Primary key)
        public string Name { get; set; } // Name (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)

        // Reverse navigation

        /// <summary>
        /// Child Promotions where [Promotion].[PromotionStatusId] point to this entity (FK_Promotion_PromotionStatus)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Promotion> Promotions { get; set; } // Promotion.FK_Promotion_PromotionStatus

        public PromotionStatus()
        {
            Promotions = new System.Collections.Generic.List<Promotion>();
        }
    }

    // PromotionDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PromotionDetail : ISoftDelete, IDabaseModel 
    {
        public int PromotionDetailId { get; set; } // PromotionDetailId (Primary key)
        public int? PromotionPercent { get; set; } // PromotionPercent
        public int? ServiceId { get; set; } // ServiceId
        public decimal? OriginalPrice { get; set; } // OriginalPrice
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public int? PromotionId { get; set; } // PromotionId
        public bool IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Promotion pointed by [PromotionDetail].([PromotionId]) (FK_PromotionDetail_Promotion)
        /// </summary>
        public virtual Promotion Promotion { get; set; } // FK_PromotionDetail_Promotion

        /// <summary>
        /// Parent Service pointed by [PromotionDetail].([ServiceId]) (FK_PromotionDetail_Service)
        /// </summary>
        public virtual Service Service { get; set; } // FK_PromotionDetail_Service
    }

    // Promotion
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Promotion : ISoftDelete, IDabaseModel 
    {
        public int PromotionId { get; set; } // PromotionId (Primary key)
        public int? SupplierId { get; set; } // SupplierId
        public string Title { get; set; } // Title (length: 50)
        public string Description { get; set; } // Description
        public System.DateTime? EffectiveStartDate { get; set; } // EffectiveStartDate
        public System.DateTime? EffectiveEndDate { get; set; } // EffectiveEndDate
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted
        public int? PromotionStatusId { get; set; } // PromotionStatusId

        // Reverse navigation

        /// <summary>
        /// Child PromotionDetails where [PromotionDetail].[PromotionId] point to this entity (FK_PromotionDetail_Promotion)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PromotionDetail> PromotionDetails { get; set; } // PromotionDetail.FK_PromotionDetail_Promotion

        // Foreign keys

        /// <summary>
        /// Parent PromotionStatus pointed by [Promotion].([PromotionStatusId]) (FK_Promotion_PromotionStatus)
        /// </summary>
        public virtual PromotionStatus PromotionStatus { get; set; } // FK_Promotion_PromotionStatus

        /// <summary>
        /// Parent Supplier pointed by [Promotion].([SupplierId]) (FK_Promotion_Supplier)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_Promotion_Supplier

        public Promotion()
        {
            IsDeleted = false;
            PromotionDetails = new System.Collections.Generic.List<PromotionDetail>();
        }
    }

    // OrderStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class OrderStatus : ISoftDelete, IDabaseModel 
    {
        public int OrderStatusId { get; set; } // OrderStatusId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Orders where [Order].[OrderStatusId] point to this entity (FK__Order__OrderStat__778AC167)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Order.FK__Order__OrderStat__778AC167

        public OrderStatus()
        {
            Orders = new System.Collections.Generic.List<Order>();
        }
    }

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class OrderDetail : ISoftDelete, IDabaseModel 
    {
        public int OrderDetailId { get; set; } // OrderDetailId (Primary key)
        public int? ServiceId { get; set; } // ServiceId
        public decimal? Price { get; set; } // Price
        public string Description { get; set; } // Description
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public int? OrderId { get; set; } // OrderId
        public bool IsDeleted { get; set; } // IsDeleted
        public int? Quantity { get; set; } // Quantity
        public string ServiceName { get; set; } // ServiceName (length: 50)

        // Foreign keys

        /// <summary>
        /// Parent Service pointed by [OrderDetail].([ServiceId]) (FK_OrderDetail_Service)
        /// </summary>
        public virtual Service Service { get; set; } // FK_OrderDetail_Service
    }

    // Order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Order : ISoftDelete, IDabaseModel 
    {
        public int OrderId { get; set; } // OrderId (Primary key)
        public int? CustomerId { get; set; } // CustomerId
        public string Address { get; set; } // Address (length: 200)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 15)
        public decimal? TotalPrice { get; set; } // TotalPrice
        public int? OrderStatusId { get; set; } // OrderStatusId
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public bool IsDeleted { get; set; } // IsDeleted
        public int? SupplierId { get; set; } // SupplierId
        public bool? IsPaid { get; set; } // IsPaid
        public System.DateTime? ImplementDate { get; set; } // ImplementDate
        public string CancelReason { get; set; } // CancelReason (length: 100)
        public System.DateTime? PaymentDate { get; set; } // PaymentDate
        public string Description { get; set; } // Description (length: 255)
        public string SupplierNote { get; set; } // SupplierNote

        // Foreign keys

        /// <summary>
        /// Parent Customer pointed by [Order].([CustomerId]) (FK_Order_Customer)
        /// </summary>
        public virtual Customer Customer { get; set; } // FK_Order_Customer

        /// <summary>
        /// Parent OrderStatus pointed by [Order].([OrderStatusId]) (FK__Order__OrderStat__778AC167)
        /// </summary>
        public virtual OrderStatus OrderStatus { get; set; } // FK__Order__OrderStat__778AC167

        /// <summary>
        /// Parent Supplier pointed by [Order].([SupplierId]) (FK_Order_Supplier)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_Order_Supplier
    }

    // Feedback
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Feedback : ISoftDelete, IDabaseModel 
    {
        public int FeedbackId { get; set; } // FeedbackId (Primary key)
        public int CustomerId { get; set; } // CustomerId
        public int? OrderId { get; set; } // OrderId
        public int? NumberOfStart { get; set; } // NumberOfStart
        public string FeedbackContent { get; set; } // FeedbackContent
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted
        public int SupplierId { get; set; } // SupplierId

        // Foreign keys

        /// <summary>
        /// Parent Customer pointed by [Feedback].([CustomerId]) (FK_Feedback_Customer)
        /// </summary>
        public virtual Customer Customer { get; set; } // FK_Feedback_Customer

        /// <summary>
        /// Parent Supplier pointed by [Feedback].([SupplierId]) (FK_Feedback_Supplier)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_Feedback_Supplier
    }

    // District
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class District : ISoftDelete, IDabaseModel 
    {
        public int DistrictId { get; set; } // DistrictId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? CityId { get; set; } // CityId
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Branches where [Branch].[DistrictId] point to this entity (FK_Branch_District)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Branch> Branches { get; set; } // Branch.FK_Branch_District

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [District].([CityId]) (FK_District_City)
        /// </summary>
        public virtual City City { get; set; } // FK_District_City

        public District()
        {
            Branches = new System.Collections.Generic.List<Branch>();
        }
    }

    // Customer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Customer : ISoftDelete, IDabaseModel 
    {
        public int CustomerId { get; set; } // CustomerId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 15)
        public string Address { get; set; } // Address (length: 200)
        public string Email { get; set; } // Email (length: 50)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public int? CustomerStatusId { get; set; } // CustomerStatusId
        public int? AccountId { get; set; } // AccountId
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public bool IsDeleted { get; set; } // IsDeleted
        public bool? IsActived { get; set; } // IsActived

        // Reverse navigation

        /// <summary>
        /// Child Feedbacks where [Feedback].[CustomerId] point to this entity (FK_Feedback_Customer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK_Feedback_Customer
        /// <summary>
        /// Child Orders where [Order].[CustomerId] point to this entity (FK_Order_Customer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Order> Orders { get; set; } // Order.FK_Order_Customer

        public Customer()
        {
            Orders = new System.Collections.Generic.List<Order>();
            Feedbacks = new System.Collections.Generic.List<Feedback>();
        }
    }

    // City
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class City : ISoftDelete, IDabaseModel 
    {
        public int CityId { get; set; } // CityId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Branches where [Branch].[CityId] point to this entity (FK_Branch_City)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Branch> Branches { get; set; } // Branch.FK_Branch_City
        /// <summary>
        /// Child Districts where [District].[CityId] point to this entity (FK_District_City)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<District> Districts { get; set; } // District.FK_District_City

        public City()
        {
            Branches = new System.Collections.Generic.List<Branch>();
            Districts = new System.Collections.Generic.List<District>();
        }
    }

    // Branch
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Branch : ISoftDelete, IDabaseModel 
    {
        public int BranchId { get; set; } // BranchId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int? SupplierId { get; set; } // SupplierId
        public int? CityId { get; set; } // CityId
        public int? DistrictId { get; set; } // DistrictId
        public string Address { get; set; } // Address (length: 50)
        public string Longitude { get; set; } // Longitude
        public string Latitude { get; set; } // Latitude
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public string GoogleMapSearchKey { get; set; } // GoogleMapSearchKey
        public bool IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent City pointed by [Branch].([CityId]) (FK_Branch_City)
        /// </summary>
        public virtual City City { get; set; } // FK_Branch_City

        /// <summary>
        /// Parent District pointed by [Branch].([DistrictId]) (FK_Branch_District)
        /// </summary>
        public virtual District District { get; set; } // FK_Branch_District

        /// <summary>
        /// Parent Supplier pointed by [Branch].([SupplierId]) (FK_Branch_Supplier)
        /// </summary>
        public virtual Supplier Supplier { get; set; } // FK_Branch_Supplier

        public Branch()
        {
            IsDeleted = false;
        }
    }

    // AccountType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AccountType : ISoftDelete, IDabaseModel 
    {
        public int AccountTypeId { get; set; } // AccountTypeId (Primary key)
        public string Name { get; set; } // Name (length: 20)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Accounts where [Account].[AccountTypeId] point to this entity (FK_Account_AccountType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Account> Accounts { get; set; } // Account.FK_Account_AccountType

        public AccountType()
        {
            Accounts = new System.Collections.Generic.List<Account>();
        }
    }

    // Account
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Account : ISoftDelete, IDabaseModel 
    {
        public int AccountId { get; set; } // AccountId (Primary key)
        public int? AccountTypeId { get; set; } // AccountTypeId
        public string Username { get; set; } // Username (length: 20)
        public string Password { get; set; } // Password (length: 200)
        public System.DateTime? CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 30)
        public System.DateTime? UpdatedDate { get; set; } // UpdatedDate
        public string UpdatedBy { get; set; } // UpdatedBy (length: 30)
        public bool IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent AccountType pointed by [Account].([AccountTypeId]) (FK_Account_AccountType)
        /// </summary>
        public virtual AccountType AccountType { get; set; } // FK_Account_AccountType
    }

    #endregion

    #region POCO Configuration

	public static class ModelBuilderExtensions
    {
        public static void AddConfiguration<TEntity>(
          this ModelBuilder modelBuilder,
          DbEntityConfiguration<TEntity> entityConfiguration) where TEntity : class
        {
            modelBuilder.Entity<TEntity>(entityConfiguration.Configure);
        }
    }

    public abstract class DbEntityConfiguration<TEntity> where TEntity : class
    {
        public abstract void Configure(EntityTypeBuilder<TEntity> entity);
    }

    // Account
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AccountConfiguration : DbEntityConfiguration<Account>
    {
        public override void Configure(EntityTypeBuilder<Account> entity )
        {
            entity.ToTable("Account");

            entity.HasKey(x => x.AccountId);

            entity.Property(x => x.AccountId).HasColumnName(@"AccountId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.AccountTypeId).HasColumnName(@"AccountTypeId").HasColumnType("int");
            entity.Property(x => x.Username).HasColumnName(@"Username").HasColumnType("nvarchar").HasMaxLength(20);
            entity.Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar").HasMaxLength(200);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.AccountType).WithMany(b => b.Accounts).HasForeignKey(c => c.AccountTypeId).HasConstraintName(@"FK_Account_AccountType"); // FK_Account_AccountType
        }
    }

    // AccountType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AccountTypeConfiguration : DbEntityConfiguration<AccountType>
    {
        public override void Configure(EntityTypeBuilder<AccountType> entity )
        {
            entity.ToTable("AccountType");

            entity.HasKey(x => x.AccountTypeId);

            entity.Property(x => x.AccountTypeId).HasColumnName(@"AccountTypeId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(20);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
        }
    }

    // Branch
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class BranchConfiguration : DbEntityConfiguration<Branch>
    {
        public override void Configure(EntityTypeBuilder<Branch> entity )
        {
            entity.ToTable("Branch");

            entity.HasKey(x => x.BranchId);

            entity.Property(x => x.BranchId).HasColumnName(@"BranchId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int");
            entity.Property(x => x.CityId).HasColumnName(@"CityId").HasColumnType("int");
            entity.Property(x => x.DistrictId).HasColumnName(@"DistrictId").HasColumnType("int");
            entity.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.Longitude).HasColumnName(@"Longitude").HasColumnType("varchar(max)").IsUnicode(false);
            entity.Property(x => x.Latitude).HasColumnName(@"Latitude").HasColumnType("varchar(max)").IsUnicode(false);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("date");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.GoogleMapSearchKey).HasColumnName(@"GoogleMapSearchKey").HasColumnType("nvarchar(max)");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.City).WithMany(b => b.Branches).HasForeignKey(c => c.CityId).HasConstraintName(@"FK_Branch_City"); // FK_Branch_City
            entity.HasOne(a => a.District).WithMany(b => b.Branches).HasForeignKey(c => c.DistrictId).HasConstraintName(@"FK_Branch_District"); // FK_Branch_District
            entity.HasOne(a => a.Supplier).WithMany(b => b.Branches).HasForeignKey(c => c.SupplierId).HasConstraintName(@"FK_Branch_Supplier"); // FK_Branch_Supplier
        }
    }

    // City
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class CityConfiguration : DbEntityConfiguration<City>
    {
        public override void Configure(EntityTypeBuilder<City> entity )
        {
            entity.ToTable("City");

            entity.HasKey(x => x.CityId);

            entity.Property(x => x.CityId).HasColumnName(@"CityId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
        }
    }

    // Customer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class CustomerConfiguration : DbEntityConfiguration<Customer>
    {
        public override void Configure(EntityTypeBuilder<Customer> entity )
        {
            entity.ToTable("Customer");

            entity.HasKey(x => x.CustomerId);

            entity.Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar").HasMaxLength(15);
            entity.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").HasMaxLength(200);
            entity.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.CustomerStatusId).HasColumnName(@"CustomerStatusId").HasColumnType("int");
            entity.Property(x => x.AccountId).HasColumnName(@"AccountId").HasColumnType("int");
            entity.Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("date");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.IsActived).HasColumnName(@"IsActived").HasColumnType("bit");
        }
    }

    // District
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class DistrictConfiguration : DbEntityConfiguration<District>
    {
        public override void Configure(EntityTypeBuilder<District> entity )
        {
            entity.ToTable("District");

            entity.HasKey(x => x.DistrictId);

            entity.Property(x => x.DistrictId).HasColumnName(@"DistrictId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CityId).HasColumnName(@"CityId").HasColumnType("int");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.City).WithMany(b => b.Districts).HasForeignKey(c => c.CityId).HasConstraintName(@"FK_District_City"); // FK_District_City
        }
    }

    // Feedback
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class FeedbackConfiguration : DbEntityConfiguration<Feedback>
    {
        public override void Configure(EntityTypeBuilder<Feedback> entity )
        {
            entity.ToTable("Feedback");

            entity.HasKey(x => x.FeedbackId);

            entity.Property(x => x.FeedbackId).HasColumnName(@"FeedbackId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsRequired();
            entity.Property(x => x.OrderId).HasColumnName(@"OrderId").HasColumnType("int");
            entity.Property(x => x.NumberOfStart).HasColumnName(@"NumberOfStart").HasColumnType("int");
            entity.Property(x => x.FeedbackContent).HasColumnName(@"FeedbackContent").HasColumnType("nvarchar(max)");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.Customer).WithMany(b => b.Feedbacks).HasForeignKey(c => c.CustomerId).HasConstraintName(@"FK_Feedback_Customer"); // FK_Feedback_Customer
            entity.HasOne(a => a.Supplier).WithMany(b => b.Feedbacks).HasForeignKey(c => c.SupplierId).HasConstraintName(@"FK_Feedback_Supplier"); // FK_Feedback_Supplier
        }
    }

    // Order
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class OrderConfiguration : DbEntityConfiguration<Order>
    {
        public override void Configure(EntityTypeBuilder<Order> entity )
        {
            entity.ToTable("Order");

            entity.HasKey(x => x.OrderId);

            entity.Property(x => x.OrderId).HasColumnName(@"OrderId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int");
            entity.Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").HasMaxLength(200);
            entity.Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar").HasMaxLength(15);
            entity.Property(x => x.TotalPrice).HasColumnName(@"TotalPrice").HasColumnType("decimal").HasColumnType(@"decimal(18,0)");
            entity.Property(x => x.OrderStatusId).HasColumnName(@"OrderStatusId").HasColumnType("int");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int");
            entity.Property(x => x.IsPaid).HasColumnName(@"IsPaid").HasColumnType("bit");
            entity.Property(x => x.ImplementDate).HasColumnName(@"ImplementDate").HasColumnType("datetime");
            entity.Property(x => x.CancelReason).HasColumnName(@"CancelReason").HasColumnType("nvarchar").HasMaxLength(100);
            entity.Property(x => x.PaymentDate).HasColumnName(@"PaymentDate").HasColumnType("datetime");
            entity.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired().HasMaxLength(255);
            entity.Property(x => x.SupplierNote).HasColumnName(@"SupplierNote").HasColumnType("nvarchar(max)");

            // Foreign keys
            entity.HasOne(a => a.Customer).WithMany(b => b.Orders).HasForeignKey(c => c.CustomerId).HasConstraintName(@"FK_Order_Customer"); // FK_Order_Customer
            entity.HasOne(a => a.OrderStatus).WithMany(b => b.Orders).HasForeignKey(c => c.OrderStatusId).HasConstraintName(@"FK__Order__OrderStat__778AC167"); // FK__Order__OrderStat__778AC167
            entity.HasOne(a => a.Supplier).WithMany(b => b.Orders).HasForeignKey(c => c.SupplierId).HasConstraintName(@"FK_Order_Supplier"); // FK_Order_Supplier
        }
    }

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class OrderDetailConfiguration : DbEntityConfiguration<OrderDetail>
    {
        public override void Configure(EntityTypeBuilder<OrderDetail> entity )
        {
            entity.ToTable("OrderDetail");

            entity.HasKey(x => x.OrderDetailId);

            entity.Property(x => x.OrderDetailId).HasColumnName(@"OrderDetailId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.ServiceId).HasColumnName(@"ServiceId").HasColumnType("int");
            entity.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("decimal").HasColumnType(@"decimal(18,0)");
            entity.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.OrderId).HasColumnName(@"OrderId").HasColumnType("int");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("int");
            entity.Property(x => x.ServiceName).HasColumnName(@"ServiceName").HasColumnType("nvarchar").HasMaxLength(50);

            // Foreign keys
            entity.HasOne(a => a.Service).WithMany(b => b.OrderDetails).HasForeignKey(c => c.ServiceId).HasConstraintName(@"FK_OrderDetail_Service"); // FK_OrderDetail_Service
        }
    }

    // OrderStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class OrderStatusConfiguration : DbEntityConfiguration<OrderStatus>
    {
        public override void Configure(EntityTypeBuilder<OrderStatus> entity )
        {
            entity.ToTable("OrderStatus");

            entity.HasKey(x => x.OrderStatusId);

            entity.Property(x => x.OrderStatusId).HasColumnName(@"OrderStatusId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
        }
    }

    // Promotion
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PromotionConfiguration : DbEntityConfiguration<Promotion>
    {
        public override void Configure(EntityTypeBuilder<Promotion> entity )
        {
            entity.ToTable("Promotion");

            entity.HasKey(x => x.PromotionId);

            entity.Property(x => x.PromotionId).HasColumnName(@"PromotionId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int");
            entity.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)");
            entity.Property(x => x.EffectiveStartDate).HasColumnName(@"EffectiveStartDate").HasColumnType("date");
            entity.Property(x => x.EffectiveEndDate).HasColumnName(@"EffectiveEndDate").HasColumnType("date");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.PromotionStatusId).HasColumnName(@"PromotionStatusId").HasColumnType("int");

            // Foreign keys
            entity.HasOne(a => a.PromotionStatus).WithMany(b => b.Promotions).HasForeignKey(c => c.PromotionStatusId).HasConstraintName(@"FK_Promotion_PromotionStatus"); // FK_Promotion_PromotionStatus
            entity.HasOne(a => a.Supplier).WithMany(b => b.Promotions).HasForeignKey(c => c.SupplierId).HasConstraintName(@"FK_Promotion_Supplier"); // FK_Promotion_Supplier
        }
    }

    // PromotionDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PromotionDetailConfiguration : DbEntityConfiguration<PromotionDetail>
    {
        public override void Configure(EntityTypeBuilder<PromotionDetail> entity )
        {
            entity.ToTable("PromotionDetail");

            entity.HasKey(x => x.PromotionDetailId);

            entity.Property(x => x.PromotionDetailId).HasColumnName(@"PromotionDetailId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.PromotionPercent).HasColumnName(@"PromotionPercent").HasColumnType("int");
            entity.Property(x => x.ServiceId).HasColumnName(@"ServiceId").HasColumnType("int");
            entity.Property(x => x.OriginalPrice).HasColumnName(@"OriginalPrice").HasColumnType("decimal").HasColumnType(@"decimal(18,0)");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.PromotionId).HasColumnName(@"PromotionId").HasColumnType("int");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.Promotion).WithMany(b => b.PromotionDetails).HasForeignKey(c => c.PromotionId).HasConstraintName(@"FK_PromotionDetail_Promotion"); // FK_PromotionDetail_Promotion
            entity.HasOne(a => a.Service).WithMany(b => b.PromotionDetails).HasForeignKey(c => c.ServiceId).HasConstraintName(@"FK_PromotionDetail_Service"); // FK_PromotionDetail_Service
        }
    }

    // PromotionStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PromotionStatusConfiguration : DbEntityConfiguration<PromotionStatus>
    {
        public override void Configure(EntityTypeBuilder<PromotionStatus> entity )
        {
            entity.ToTable("PromotionStatus");

            entity.HasKey(x => x.PromotionStatusId);

            entity.Property(x => x.PromotionStatusId).HasColumnName(@"PromotionStatusId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
        }
    }

    // Service
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ServiceConfiguration : DbEntityConfiguration<Service>
    {
        public override void Configure(EntityTypeBuilder<Service> entity )
        {
            entity.ToTable("Service");

            entity.HasKey(x => x.ServiceId);

            entity.Property(x => x.ServiceId).HasColumnName(@"ServiceId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int");
            entity.Property(x => x.ServiceTypeId).HasColumnName(@"ServiceTypeId").HasColumnType("int");
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.Price).HasColumnName(@"Price").HasColumnType("decimal").HasColumnType(@"decimal(18,0)");
            entity.Property(x => x.ServiceStatusId).HasColumnName(@"ServiceStatusId").HasColumnType("int");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            entity.HasOne(a => a.ServiceStatus).WithMany(b => b.Services).HasForeignKey(c => c.ServiceStatusId).HasConstraintName(@"FK_Service_ServiceStatus"); // FK_Service_ServiceStatus
            entity.HasOne(a => a.ServiceType).WithMany(b => b.Services).HasForeignKey(c => c.ServiceTypeId).HasConstraintName(@"FK_Service_ServiceType"); // FK_Service_ServiceType
            entity.HasOne(a => a.Supplier).WithMany(b => b.Services).HasForeignKey(c => c.SupplierId).HasConstraintName(@"FK_Service_Supplier"); // FK_Service_Supplier
        }
    }

    // ServiceStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ServiceStatusConfiguration : DbEntityConfiguration<ServiceStatus>
    {
        public override void Configure(EntityTypeBuilder<ServiceStatus> entity )
        {
            entity.ToTable("ServiceStatus");

            entity.HasKey(x => x.ServiceStatusId);

            entity.Property(x => x.ServiceStatusId).HasColumnName(@"ServiceStatusId").HasColumnType("int").IsRequired().ValueGeneratedNever();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(20);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
        }
    }

    // ServiceType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ServiceTypeConfiguration : DbEntityConfiguration<ServiceType>
    {
        public override void Configure(EntityTypeBuilder<ServiceType> entity )
        {
            entity.ToTable("ServiceType");

            entity.HasKey(x => x.ServiceTypeId);

            entity.Property(x => x.ServiceTypeId).HasColumnName(@"ServiceTypeId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.Avatar).HasColumnName(@"Avatar").HasColumnType("nvarchar").HasMaxLength(200);
        }
    }

    // Supplier
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplierConfiguration : DbEntityConfiguration<Supplier>
    {
        public override void Configure(EntityTypeBuilder<Supplier> entity )
        {
            entity.ToTable("Supplier");

            entity.HasKey(x => x.SupplierId);

            entity.Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.AccountId).HasColumnName(@"AccountId").HasColumnType("int");
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.Avatar).HasColumnName(@"Avatar").HasColumnType("nvarchar").HasMaxLength(200);
            entity.Property(x => x.SupplierStatusId).HasColumnName(@"SupplierStatusId").HasColumnType("int");
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.MainBranchId).HasColumnName(@"MainBranchId").HasColumnType("int");
            entity.Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar").HasMaxLength(11);
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            entity.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)");
            entity.Property(x => x.PaymentEmail).HasColumnName(@"PaymentEmail").HasColumnType("nvarchar").HasMaxLength(50);

            // Foreign keys
            entity.HasOne(a => a.SupplierStatus).WithMany(b => b.Suppliers).HasForeignKey(c => c.SupplierStatusId).HasConstraintName(@"FK_Supplier_SupplierStatus"); // FK_Supplier_SupplierStatus
        }
    }

    // SupplierStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplierStatusConfiguration : DbEntityConfiguration<SupplierStatus>
    {
        public override void Configure(EntityTypeBuilder<SupplierStatus> entity )
        {
            entity.ToTable("SupplierStatus");

            entity.HasKey(x => x.SupplierStatusId);

            entity.Property(x => x.SupplierStatusId).HasColumnName(@"SupplierStatusId").HasColumnType("int").IsRequired().ValueGeneratedOnAdd();
            entity.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").HasMaxLength(50);
            entity.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime");
            entity.Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("nvarchar").HasMaxLength(30);
            entity.Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime");
            entity.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
        }
    }

    #endregion

}
// </auto-generated>
